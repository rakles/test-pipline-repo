# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./TestPipeline/TestPipeline.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Debug

permissions:
  contents: read

jobs:
  update-vcpkg-cache:
      runs-on: windows-latest
      steps:
        - uses: actions/checkout@v5
          with:
            submodules: 'true'
  
        - name: Install latest CMake and Ninja.
          uses: lukka/get-cmake@latest
  
        - name: Setup vcpkg
          uses: lukka/run-vcpkg@v11.5
          env:
            VCPKG_BINARY_SOURCES: default,readwrite
            
        - name: Normalize and strip /vcpkg_cache
          run: |
            # Convert backslashes to forward slashes
            norm_path="${VCPKG_DEFAULT_BINARY_CACHE//\\//}"
            
            # Strip trailing /vcpkg_cache
            base_path="${norm_path%/vcpkg_cache}"
            
            echo "Normalized path: $norm_path"
            echo "Base path: $base_path"
            
            # Export for later steps
            echo "BASE_PATH=$base_path" >> $GITHUB_ENV
          shell: bash
  
        - uses: actions/cache/restore@v4.2.4
          with:
            path: ${{ env.BASE_PATH }}
            key: ${{ runner.os }}-vcpkg-cache-${{ hashFiles('**/TestPipeline/vcpkg.json') }} 
  
        - name: Build vcpkg
          uses: lukka/run-vcpkg@v11.5
          with:
            runVcpkgInstall: true
            vcpkgJsonGlob: '**/TestPipeline/vcpkg.json'
          env:
            VCPKG_BINARY_SOURCES: default,readwrite
        
        - uses: actions/cache/save@v4.2.4
          with:
            path: ${{ env.BASE_PATH }}
            key: ${{ runner.os }}-vcpkg-cache-${{ hashFiles('**/TestPipeline/vcpkg.json') }}

  build:
    needs: update-vcpkg-cache
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11.5
      env:
        VCPKG_BINARY_SOURCES: default,readwrite

    - name: Normalize and strip /vcpkg_cache
      run: |
        # Convert backslashes to forward slashes
        norm_path="${VCPKG_DEFAULT_BINARY_CACHE//\\//}"
        
        # Strip trailing /vcpkg_cache
        base_path="${norm_path%/vcpkg_cache}"
        
        echo "Normalized path: $norm_path"
        echo "Base path: $base_path"
        
        # Export for later steps
        echo "BASE_PATH=$base_path" >> $GITHUB_ENV
      shell: bash

    - uses: actions/cache/restore@v4.2.4
      with:
        path: ${{ env.BASE_PATH }}
        key: ${{ runner.os }}-vcpkg-cache-${{ hashFiles('**/TestPipeline/vcpkg.json') }} 
    - name: Build vcpkg
      uses: lukka/run-vcpkg@v11.5
      with:
        runVcpkgInstall: true
        vcpkgJsonGlob: '**/TestPipeline/vcpkg.json'
      env:
        VCPKG_BINARY_SOURCES: default,readwrite

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
